Тестовое задание

На входе мы получаем некие файлы в xml/csv формате. В этих файлах может содержаться от 1 до миллиона записей и более с информацией о товарах.
Структура файлов (название/кол-во столбцов csv и т.п.) может отличатся.
В каждом файле могут быть дубликаты/варианты товаров (товары с одинаковыми product_id/image) но отличается цвет/размер/материал и т.д.

1. Необходимо спроектировать парсер файлов, который сохраняет данные в базу. Создает новые записи и обновляет уже загруженные.
2. Парсер должен поддерживать несколько различных форматов и просто расширяться при появлении новых.
3. Парсер должен работать максимально быстро с минимальным количеством обращений к базе.
4. Реализовать или предложить варианты механизма нахождения фильтрации дубликатов продуктов.
5. Желательно, при парсинге не загружать весь документ в оперативную память
6. В качестве инструментов можно использовать любые библиотеки, в комментариях обосновать выбор инструментов
7. Плюсом будет написание тестов для проверки работы парсеры и бенчмарки его работы
8. Основная задача - что бы парсер отработал быстро и с оптимальным кол-вом памяти. Возможные любые решения.

Примеры csv/xml файлов в приложении

Пример моделей
"id"
"title"
"sku_number"
"url"
"image_url"
"buy_url"
"description"
"discount"
"discount_type"
"currency"
"retail_price"
"sale_price"
"brand"
"manufacture"
"shipping"
"availability
"sizes"
"materials"
"colors"
"style"
"gender_group"
"age_group"


